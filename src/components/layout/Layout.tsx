import Head from "next/head";
import AppHeader from "./AppHeader";
import { ReactElement, useState, useEffect } from "react";
import dynamic from "next/dynamic";
import LoadingBar from "react-top-loading-bar";
import { useRouter } from "next/router";

interface LayoutProps {
  children: ReactElement;
}

const LoginModal = dynamic(() => import("./LoginModal"), { ssr: false });

export default function Layout({ children }: LayoutProps) {
  const [toggleModal, setToggleModal] = useState<boolean>(false);
  const [progress, setProgress] = useState(0);
  const router = useRouter();

  useEffect(() => {
    const handleRouteChangeComplete = () => {
      setProgress(100);
    };

    const handleRouteChangeStart = () => {
      setProgress(40);
    };

    router.events.on("routeChangeComplete", handleRouteChangeComplete);
    router.events.on("routeChangeStart", handleRouteChangeStart);

    // If the component is unmounted, unsubscribe
    // from the event with the `off` method:
    return () => {
      router.events.off("routeChangeComplete", handleRouteChangeComplete);
      router.events.off("routeChangeStart", handleRouteChangeStart);
    };
  }, [router, setProgress]);

  return (
    <section className="flex min-h-screen w-screen flex-col bg-[#F2F2F2]">
      <Head>
        <title>Tweeter - Twitter clone</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LoadingBar
        color="#1A56DB"
        progress={progress}
        waitingTime={400}
        onLoaderFinished={() => setProgress(0)}
      />
      <AppHeader setToggleModal={setToggleModal} />
      {children}
      <p className="mt-auto px-3 pb-5 text-center text-sm text-gray-400">
        created by
        <span className="font-semibold underline"> Arafat Islam</span> -
        devChallenges.io
      </p>
      <LoginModal toggleModal={toggleModal} setToggleModal={setToggleModal} />
    </section>
  );
}
